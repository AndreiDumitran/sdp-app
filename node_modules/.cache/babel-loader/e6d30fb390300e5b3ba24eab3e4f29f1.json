{"ast":null,"code":"var _jsxFileName = \"/home/andrei/Desktop/SoftDevProj/Playground/src/components/displayPlaces.js\";\nimport React, { Component } from \"react\";\nimport { Card, Accordion, Container } from \"react-bootstrap\";\nexport let radius = 200;\nexport class DisplayPlacesList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      places: [],\n      placeType: [\"point_of_interest\"],\n      location: {}\n    };\n  } // componentDidMount() {\n  //   fetch(`\"https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=\" +\n  // ${this.location && this.location.lat} +\n  // \",\" +\n  // ${this.location && this.location.lng} +\n  // \"&radius=\" +\n  // ${radius} +\n  // \"&type=\" +\n  // ${this.placeType} +\n  // \"&key=\" +\n  // ${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`)\n  //     .then((res) => {\n  //       return res.json();\n  //     })\n  //     .then((res) => {\n  //       let array = [];\n  //       for (let googlePlace of res.results) {\n  //         var place = {};\n  //         var myLat = googlePlace.geometry.location.lat;\n  //         var myLong = googlePlace.geometry.location.lng;\n  //         var coordinate = {\n  //           latitude: myLat,\n  //           longitude: myLong,\n  //         };\n  //         place[\"placeTypes\"] = googlePlace.types;\n  //         place[\"coordinate\"] = coordinate;\n  //         place[\"placeId\"] = googlePlace.place_id;\n  //         place[\"placeName\"] = googlePlace.name;\n  //         place[\"formattedAddress\"] = googlePlace.vicinity;\n  //         place[\"businessStatus\"] = googlePlace.business_status;\n  //         place[\"rating\"] = googlePlace.rating;\n  //         place[\"userRating\"] = googlePlace.user_ratings_total;\n  //         array.push(place);\n  //       }\n  //       this.setState({ ...this.state, places: array });\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n  //     });\n  //  }\n\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Accordion, {\n      defaultActiveKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, this.places && this.places.map(nearbyPlaces => /*#__PURE__*/React.createElement(Card, {\n      key: nearbyPlaces.placeId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n      as: Card.Header,\n      eventKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, nearbyPlaces.placeName), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n      eventKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, \"Address: \", nearbyPlaces.formattedAddress, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 64\n      }\n    }), \"Business Status: \", nearbyPlaces.businessStatus, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 23\n      }\n    }), \"Rating: \", nearbyPlaces.rating, \" out of\", \" \", nearbyPlaces.userRating)))))));\n  }\n\n}","map":{"version":3,"sources":["/home/andrei/Desktop/SoftDevProj/Playground/src/components/displayPlaces.js"],"names":["React","Component","Card","Accordion","Container","radius","DisplayPlacesList","constructor","state","places","placeType","location","render","console","log","props","map","nearbyPlaces","placeId","Header","placeName","formattedAddress","businessStatus","rating","userRating"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,SAA1B,QAA2C,iBAA3C;AACA,OAAO,IAAIC,MAAM,GAAG,GAAb;AAEP,OAAO,MAAMC,iBAAN,SAAgCL,SAAhC,CAA0C;AAC/CM,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,SAAS,EAAE,CAAC,mBAAD,CAFA;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAKD,GAR8C,CAS/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,wBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,gBAAgB,EAAC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKN,MAAL,IACC,KAAKA,MAAL,CAAYO,GAAZ,CAAiBC,YAAD,iBACd,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,YAAY,CAACC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD,CAAW,MAAX;AAAkB,MAAA,EAAE,EAAEhB,IAAI,CAACiB,MAA3B;AAAmC,MAAA,QAAQ,EAAC,GAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,YAAY,CAACG,SADhB,CADF,eAIE,oBAAC,SAAD,CAAW,QAAX;AAAoB,MAAA,QAAQ,EAAC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACYH,YAAY,CAACI,gBADzB,oBAC2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD3C,uBAEoBJ,YAAY,CAACK,cAFjC,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,cAIWL,YAAY,CAACM,MAJxB,aAIuC,GAJvC,EAKGN,YAAY,CAACO,UALhB,CADF,CADF,CAJF,CADF,CAFJ,CADF,CADF;AAyBD;;AA7E8C","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Accordion, Container } from \"react-bootstrap\";\nexport let radius = 200;\n\nexport class DisplayPlacesList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      places: [],\n      placeType: [\"point_of_interest\"],\n      location: {},\n    };\n  }\n  // componentDidMount() {\n  //   fetch(`\"https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=\" +\n  // ${this.location && this.location.lat} +\n  // \",\" +\n  // ${this.location && this.location.lng} +\n  // \"&radius=\" +\n  // ${radius} +\n  // \"&type=\" +\n  // ${this.placeType} +\n  // \"&key=\" +\n  // ${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`)\n  //     .then((res) => {\n  //       return res.json();\n  //     })\n  //     .then((res) => {\n  //       let array = [];\n  //       for (let googlePlace of res.results) {\n  //         var place = {};\n  //         var myLat = googlePlace.geometry.location.lat;\n  //         var myLong = googlePlace.geometry.location.lng;\n  //         var coordinate = {\n  //           latitude: myLat,\n  //           longitude: myLong,\n  //         };\n  //         place[\"placeTypes\"] = googlePlace.types;\n  //         place[\"coordinate\"] = coordinate;\n  //         place[\"placeId\"] = googlePlace.place_id;\n  //         place[\"placeName\"] = googlePlace.name;\n  //         place[\"formattedAddress\"] = googlePlace.vicinity;\n  //         place[\"businessStatus\"] = googlePlace.business_status;\n  //         place[\"rating\"] = googlePlace.rating;\n  //         place[\"userRating\"] = googlePlace.user_ratings_total;\n  //         array.push(place);\n  //       }\n  //       this.setState({ ...this.state, places: array });\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n  //     });\n  //  }\n\n  render() {\n    console.log(this.props);\n    return (\n      <Container>\n        <Accordion defaultActiveKey=\"0\">\n          {this.places &&\n            this.places.map((nearbyPlaces) => (\n              <Card key={nearbyPlaces.placeId}>\n                <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                  {nearbyPlaces.placeName}\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey=\"0\">\n                  <Card.Body>\n                    <p>\n                      Address: {nearbyPlaces.formattedAddress} <br />\n                      Business Status: {nearbyPlaces.businessStatus}\n                      <br />\n                      Rating: {nearbyPlaces.rating} out of{\" \"}\n                      {nearbyPlaces.userRating}\n                    </p>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n            ))}\n        </Accordion>\n      </Container>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}