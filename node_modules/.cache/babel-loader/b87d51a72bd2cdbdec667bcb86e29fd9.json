{"ast":null,"code":"var _jsxFileName = \"/home/andrei/Desktop/SoftDevProj/Playground/src/components/displayPlaces.js\";\nimport React, { Component } from \"react\";\nimport { center, GetBrowserGeoLocation } from \"./getBrowserLocation\";\nconst placeType = [];\nGetBrowserGeoLocation();\nconsole.log(center);\nexport let radius = 200;\n\ngetLocation = () => {\n  // Change the function so it has access to the outer scope\n  navigator.geolocation.getCurrentPosition(position => {\n    this.setState({\n      latitude: position.coords.latitude,\n      longitude: position.coords.longitude\n    }); // Move the function call to here :)\n\n    this.getAPI();\n  }, error => this.setState({\n    error: error.message,\n    latitude: 41.77,\n    longitude: -88.07\n  }), {\n    enableHighAccuracy: false,\n    timeout: 5000,\n    maximumAge: 10000\n  });\n};\n\nconst url = \"https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=\" + center.lat + \",\" + center.lng + \"&radius=\" + radius + \"&type=\" + placeType + \"&key=\" + process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\nlet places = [];\nfetch(url).then(res => {\n  return res.json();\n}).then(res => {\n  for (let googlePlace of res.results) {\n    var place = {};\n    var myLat = googlePlace.geometry.location.lat;\n    var myLong = googlePlace.geometry.location.lng;\n    var coordinate = {\n      latitude: myLat,\n      longitude: myLong\n    };\n    place[\"placeTypes\"] = googlePlace.types;\n    place[\"coordinate\"] = coordinate;\n    place[\"placeId\"] = googlePlace.place_id;\n    place[\"placeName\"] = googlePlace.name;\n    places.push(place);\n  } // Show all the places around 4 km from San Francisco.\n\n\n  console.log(places);\n}).catch(error => {\n  console.log(error);\n});\nexport class DisplayPlacesList extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, places.map(nearbyPlaces => /*#__PURE__*/React.createElement(\"li\", {\n      key: nearbyPlaces.placeId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, nearbyPlaces.placeName)));\n  }\n\n}","map":{"version":3,"sources":["/home/andrei/Desktop/SoftDevProj/Playground/src/components/displayPlaces.js"],"names":["React","Component","center","GetBrowserGeoLocation","placeType","console","log","radius","getLocation","navigator","geolocation","getCurrentPosition","position","setState","latitude","coords","longitude","getAPI","error","message","enableHighAccuracy","timeout","maximumAge","url","lat","lng","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","places","fetch","then","res","json","googlePlace","results","place","myLat","geometry","location","myLong","coordinate","types","place_id","name","push","catch","DisplayPlacesList","render","map","nearbyPlaces","placeId","placeName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,qBAAjB,QAA8C,sBAA9C;AAEA,MAAMC,SAAS,GAAG,EAAlB;AAEAD,qBAAqB;AACrBE,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AAEA,OAAO,IAAIK,MAAM,GAAG,GAAb;;AAEPC,WAAW,GAAG,MAAM;AAAE;AAEpBC,EAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACKC,QAAD,IAAc;AACV,SAAKC,QAAL,CAAc;AACVC,MAAAA,QAAQ,EAAEF,QAAQ,CAACG,MAAT,CAAgBD,QADhB;AAEVE,MAAAA,SAAS,EAAEJ,QAAQ,CAACG,MAAT,CAAgBC;AAFjB,KAAd,EADU,CAMV;;AACA,SAAKC,MAAL;AACH,GATL,EAUKC,KAAD,IACI,KAAKL,QAAL,CAAc;AAAEK,IAAAA,KAAK,EAAEA,KAAK,CAACC,OAAf;AAAwBL,IAAAA,QAAQ,EAAE,KAAlC;AAAyCE,IAAAA,SAAS,EAAE,CAAC;AAArD,GAAd,CAXR,EAYI;AAAEI,IAAAA,kBAAkB,EAAE,KAAtB;AAA6BC,IAAAA,OAAO,EAAE,IAAtC;AAA4CC,IAAAA,UAAU,EAAE;AAAxD,GAZJ;AAcD,CAhBD;;AAqBA,MAAMC,GAAG,GACP,2EACArB,MAAM,CAACsB,GADP,GAEA,GAFA,GAGAtB,MAAM,CAACuB,GAHP,GAIA,UAJA,GAKAlB,MALA,GAMA,QANA,GAOAH,SAPA,GAQA,OARA,GASAsB,OAAO,CAACC,GAAR,CAAYC,6BAVd;AAYA,IAAIC,MAAM,GAAG,EAAb;AACAC,KAAK,CAACP,GAAD,CAAL,CACGQ,IADH,CACSC,GAAD,IAAS;AACb,SAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,CAHH,EAIGF,IAJH,CAISC,GAAD,IAAS;AACb,OAAK,IAAIE,WAAT,IAAwBF,GAAG,CAACG,OAA5B,EAAqC;AACnC,QAAIC,KAAK,GAAG,EAAZ;AACA,QAAIC,KAAK,GAAGH,WAAW,CAACI,QAAZ,CAAqBC,QAArB,CAA8Bf,GAA1C;AACA,QAAIgB,MAAM,GAAGN,WAAW,CAACI,QAAZ,CAAqBC,QAArB,CAA8Bd,GAA3C;AACA,QAAIgB,UAAU,GAAG;AACf3B,MAAAA,QAAQ,EAAEuB,KADK;AAEfrB,MAAAA,SAAS,EAAEwB;AAFI,KAAjB;AAIAJ,IAAAA,KAAK,CAAC,YAAD,CAAL,GAAsBF,WAAW,CAACQ,KAAlC;AACAN,IAAAA,KAAK,CAAC,YAAD,CAAL,GAAsBK,UAAtB;AACAL,IAAAA,KAAK,CAAC,SAAD,CAAL,GAAmBF,WAAW,CAACS,QAA/B;AACAP,IAAAA,KAAK,CAAC,WAAD,CAAL,GAAqBF,WAAW,CAACU,IAAjC;AACAf,IAAAA,MAAM,CAACgB,IAAP,CAAYT,KAAZ;AACD,GAdY,CAeb;;;AACA/B,EAAAA,OAAO,CAACC,GAAR,CAAYuB,MAAZ;AACD,CArBH,EAsBGiB,KAtBH,CAsBU5B,KAAD,IAAW;AAChBb,EAAAA,OAAO,CAACC,GAAR,CAAYY,KAAZ;AACD,CAxBH;AA0BA,OAAO,MAAM6B,iBAAN,SAAgC9C,SAAhC,CAA0C;AAC/C+C,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGnB,MAAM,CAACoB,GAAP,CAAYC,YAAD,iBACV;AAAI,MAAA,GAAG,EAAEA,YAAY,CAACC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCD,YAAY,CAACE,SAA7C,CADD,CADH,CADF;AAOD;;AAT8C","sourcesContent":["import React, { Component } from \"react\";\nimport { center, GetBrowserGeoLocation } from \"./getBrowserLocation\";\n\nconst placeType = [];\n\nGetBrowserGeoLocation();\nconsole.log(center);\n\nexport let radius = 200;\n\ngetLocation = () => { // Change the function so it has access to the outer scope\n      \n  navigator.geolocation.getCurrentPosition(\n      (position) => {\n          this.setState({\n              latitude: position.coords.latitude,\n              longitude: position.coords.longitude,\n          });\n          \n          // Move the function call to here :)\n          this.getAPI();\n      },\n      (error) =>\n          this.setState({ error: error.message, latitude: 41.77, longitude: -88.07,}),\n      { enableHighAccuracy: false, timeout: 5000, maximumAge: 10000 },\n  );\n}\n\n\n\n\nconst url =\n  \"https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=\" +\n  center.lat +\n  \",\" +\n  center.lng +\n  \"&radius=\" +\n  radius +\n  \"&type=\" +\n  placeType +\n  \"&key=\" +\n  process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\n\nlet places = [];\nfetch(url)\n  .then((res) => {\n    return res.json();\n  })\n  .then((res) => {\n    for (let googlePlace of res.results) {\n      var place = {};\n      var myLat = googlePlace.geometry.location.lat;\n      var myLong = googlePlace.geometry.location.lng;\n      var coordinate = {\n        latitude: myLat,\n        longitude: myLong,\n      };\n      place[\"placeTypes\"] = googlePlace.types;\n      place[\"coordinate\"] = coordinate;\n      place[\"placeId\"] = googlePlace.place_id;\n      place[\"placeName\"] = googlePlace.name;\n      places.push(place);\n    }\n    // Show all the places around 4 km from San Francisco.\n    console.log(places);\n  })\n  .catch((error) => {\n    console.log(error);\n  });\n\nexport class DisplayPlacesList extends Component {\n  render() {\n    return (\n      <ul>\n        {places.map((nearbyPlaces) => (\n          <li key={nearbyPlaces.placeId}>{nearbyPlaces.placeName}</li>\n        ))}\n      </ul>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}