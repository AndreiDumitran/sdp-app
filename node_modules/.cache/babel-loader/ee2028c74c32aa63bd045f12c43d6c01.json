{"ast":null,"code":"import React from \"react\";\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nexport const libraries = [\"places\"];\nconst {\n  isLoaded,\n  loadError\n} = useLoadScript({\n  googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n  libraries\n});\nconst [markers, setMarkers] = React.useState([]);\nconst [selected, setSelected] = React.useState(null);\nexport const onMapClick = React.useCallback(event => {\n  setMarkers(current => [...current, {\n    lat: event.latLng.lat(),\n    lng: event.latLng.lng(),\n    time: new Date()\n  }]);\n}, []);\nexport const mapRef = React.useRef();\nexport const onMapLoad = React.useCallback(map => {\n  mapRef.current = map;\n}, []);\nexport const panTo = React.useCallback(({\n  lat,\n  lng\n}) => {\n  mapRef.current.panTo({\n    lat,\n    lng\n  });\n  mapRef.current.setZoom(17);\n}, []);","map":{"version":3,"sources":["/home/andrei/Desktop/SoftDevProj/Playground/src/components/consts.js"],"names":["React","GoogleMap","useLoadScript","Marker","InfoWindow","libraries","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","markers","setMarkers","useState","selected","setSelected","onMapClick","useCallback","event","current","lat","latLng","lng","time","Date","mapRef","useRef","onMapLoad","map","panTo","setZoom"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,SADF,EAEEC,aAFF,EAGEC,MAHF,EAIEC,UAJF,QAKO,wBALP;AAMA,OAAO,MAAMC,SAAS,GAAG,CAAC,QAAD,CAAlB;AAEP,MAAM;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,IAA0BL,aAAa,CAAC;AAC5CM,EAAAA,gBAAgB,EAAEC,OAAO,CAACC,GAAR,CAAYC,6BADc;AAE5CN,EAAAA;AAF4C,CAAD,CAA7C;AAKA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBb,KAAK,CAACc,QAAN,CAAe,EAAf,CAA9B;AACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhB,KAAK,CAACc,QAAN,CAAe,IAAf,CAAhC;AACA,OAAO,MAAMG,UAAU,GAAGjB,KAAK,CAACkB,WAAN,CAAmBC,KAAD,IAAW;AACrDN,EAAAA,UAAU,CAAEO,OAAD,IAAa,CACtB,GAAGA,OADmB,EAEtB;AACEC,IAAAA,GAAG,EAAEF,KAAK,CAACG,MAAN,CAAaD,GAAb,EADP;AAEEE,IAAAA,GAAG,EAAEJ,KAAK,CAACG,MAAN,CAAaC,GAAb,EAFP;AAGEC,IAAAA,IAAI,EAAE,IAAIC,IAAJ;AAHR,GAFsB,CAAd,CAAV;AAQD,CATyB,EASvB,EATuB,CAAnB;AAWP,OAAO,MAAMC,MAAM,GAAG1B,KAAK,CAAC2B,MAAN,EAAf;AACP,OAAO,MAAMC,SAAS,GAAG5B,KAAK,CAACkB,WAAN,CAAmBW,GAAD,IAAS;AAClDH,EAAAA,MAAM,CAACN,OAAP,GAAiBS,GAAjB;AACD,CAFwB,EAEtB,EAFsB,CAAlB;AAIP,OAAO,MAAMC,KAAK,GAAG9B,KAAK,CAACkB,WAAN,CAAkB,CAAC;AAAEG,EAAAA,GAAF;AAAOE,EAAAA;AAAP,CAAD,KAAkB;AACvDG,EAAAA,MAAM,CAACN,OAAP,CAAeU,KAAf,CAAqB;AAAET,IAAAA,GAAF;AAAOE,IAAAA;AAAP,GAArB;AACAG,EAAAA,MAAM,CAACN,OAAP,CAAeW,OAAf,CAAuB,EAAvB;AACD,CAHoB,EAGlB,EAHkB,CAAd","sourcesContent":["import React from \"react\";\nimport {\n  GoogleMap,\n  useLoadScript,\n  Marker,\n  InfoWindow,\n} from \"@react-google-maps/api\";\nexport const libraries = [\"places\"];\n\nconst { isLoaded, loadError } = useLoadScript({\n  googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n  libraries,\n});\n\nconst [markers, setMarkers] = React.useState([]);\nconst [selected, setSelected] = React.useState(null);\nexport const onMapClick = React.useCallback((event) => {\n  setMarkers((current) => [\n    ...current,\n    {\n      lat: event.latLng.lat(),\n      lng: event.latLng.lng(),\n      time: new Date(),\n    },\n  ]);\n}, []);\n\nexport const mapRef = React.useRef();\nexport const onMapLoad = React.useCallback((map) => {\n  mapRef.current = map;\n}, []);\n\nexport const panTo = React.useCallback(({ lat, lng }) => {\n  mapRef.current.panTo({ lat, lng });\n  mapRef.current.setZoom(17);\n}, []);\n"]},"metadata":{},"sourceType":"module"}