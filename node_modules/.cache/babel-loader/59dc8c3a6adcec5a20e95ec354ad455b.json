{"ast":null,"code":"var _jsxFileName = \"/home/andrei/Desktop/SoftDevProj/Playground/src/components/displayPlaces.js\";\nimport React, { Component } from \"react\";\nimport { Card, Accordion, Container } from \"react-bootstrap\";\nexport let radius = 200;\nexport class DisplayPlacesList extends Component {\n  constructor() {\n    this.state = {\n      places: [],\n      placeType: [\"point_of_interest\"],\n      location: this.props.location\n    };\n  }\n\n  componentDidMount() {\n    fetch(`\"https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=\" +\n  ${this.location.lat} +\n  \",\" +\n  ${this.location.lng} +\n  \"&radius=\" +\n  ${radius} +\n  \"&type=\" +\n  ${placeType} +\n  \"&key=\" +\n  ${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`).then(res => {\n      return res.json();\n    }).then(res => {\n      for (let googlePlace of res.results) {\n        var place = {};\n        var myLat = googlePlace.geometry.location.lat;\n        var myLong = googlePlace.geometry.location.lng;\n        var coordinate = {\n          latitude: myLat,\n          longitude: myLong\n        };\n        place[\"placeTypes\"] = googlePlace.types;\n        place[\"coordinate\"] = coordinate;\n        place[\"placeId\"] = googlePlace.place_id;\n        place[\"placeName\"] = googlePlace.name;\n        place[\"formattedAddress\"] = googlePlace.vicinity;\n        place[\"businessStatus\"] = googlePlace.business_status;\n        place[\"rating\"] = googlePlace.rating;\n        place[\"userRating\"] = googlePlace.user_ratings_total;\n        places.push(place);\n      }\n\n      console.log(places);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Accordion, {\n      defaultActiveKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, places.map(nearbyPlaces => /*#__PURE__*/React.createElement(Card, {\n      key: nearbyPlaces.placeId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n      as: Card.Header,\n      eventKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, nearbyPlaces.placeName), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n      eventKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }\n    }, \"Address: \", nearbyPlaces.formattedAddress, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 62\n      }\n    }), \"Business Status: \", nearbyPlaces.businessStatus, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }), \"Rating: \", nearbyPlaces.rating, \" out of\", \" \", nearbyPlaces.userRating)))))));\n  }\n\n}","map":{"version":3,"sources":["/home/andrei/Desktop/SoftDevProj/Playground/src/components/displayPlaces.js"],"names":["React","Component","Card","Accordion","Container","radius","DisplayPlacesList","constructor","state","places","placeType","location","props","componentDidMount","fetch","lat","lng","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","then","res","json","googlePlace","results","place","myLat","geometry","myLong","coordinate","latitude","longitude","types","place_id","name","vicinity","business_status","rating","user_ratings_total","push","console","log","catch","error","render","map","nearbyPlaces","placeId","Header","placeName","formattedAddress","businessStatus","userRating"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Accordion, Container } from \"react-bootstrap\";\nexport let radius = 200;\n\nexport class DisplayPlacesList extends Component {\n  constructor() {\n    this.state = {\n      places: [],\n      placeType: [\"point_of_interest\"],\n      location: this.props.location,\n    };\n  }\n  componentDidMount() {\n    fetch(`\"https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=\" +\n  ${this.location.lat} +\n  \",\" +\n  ${this.location.lng} +\n  \"&radius=\" +\n  ${radius} +\n  \"&type=\" +\n  ${placeType} +\n  \"&key=\" +\n  ${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`)\n      .then((res) => {\n        return res.json();\n      })\n      .then((res) => {\n        for (let googlePlace of res.results) {\n          \n          var place = {};\n          var myLat = googlePlace.geometry.location.lat;\n          var myLong = googlePlace.geometry.location.lng;\n          var coordinate = {\n            latitude: myLat,\n            longitude: myLong,\n          };\n          place[\"placeTypes\"] = googlePlace.types;\n          place[\"coordinate\"] = coordinate;\n          place[\"placeId\"] = googlePlace.place_id;\n          place[\"placeName\"] = googlePlace.name;\n          place[\"formattedAddress\"] = googlePlace.vicinity;\n          place[\"businessStatus\"] = googlePlace.business_status;\n          place[\"rating\"] = googlePlace.rating;\n          place[\"userRating\"] = googlePlace.user_ratings_total;\n          places.push(place);\n        }\n        console.log(places);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    return (\n      <Container>\n        <Accordion defaultActiveKey=\"0\">\n          {places.map((nearbyPlaces) => (\n            <Card key={nearbyPlaces.placeId}>\n              <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                {nearbyPlaces.placeName}\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"0\">\n                <Card.Body>\n                  <p>\n                    Address: {nearbyPlaces.formattedAddress} <br />\n                    Business Status: {nearbyPlaces.businessStatus}\n                    <br />\n                    Rating: {nearbyPlaces.rating} out of{\" \"}\n                    {nearbyPlaces.userRating}\n                  </p>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n          ))}\n        </Accordion>\n      </Container>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}