{"ast":null,"code":"var _jsxFileName = \"/home/andrei/Desktop/SoftDevProj/Playground/src/components/map.js\";\nimport React, { Component } from \"react\";\nexport class Map extends Component {\n  render() {\n    const {\n      isLoaded,\n      loadError\n    } = useLoadScript({\n      googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n      libraries\n    });\n    const [markers, setMarkers] = React.useState([]);\n    const [selected, setSelected] = React.useState(null);\n    const onMapClick = React.useCallback(event => {\n      setMarkers(current => [...current, {\n        lat: event.latLng.lat(),\n        lng: event.latLng.lng(),\n        time: new Date()\n      }]);\n    }, []);\n    const mapRef = React.useRef();\n    const onMapLoad = React.useCallback(map => {\n      mapRef.current = map;\n    }, []);\n    const panTo = React.useCallback(({\n      lat,\n      lng\n    }) => {\n      mapRef.current.panTo({\n        lat,\n        lng\n      });\n      mapRef.current.setZoom(16);\n    }, []);\n    if (loadError) return \"Error loading maps\";\n    if (!isLoaded) return \"Loading Maps\";\n    const listItems = places.map(d => /*#__PURE__*/React.createElement(\"li\", {\n      key: d.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 41\n      }\n    }, d.name));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"centered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      panTo: panTo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Locate, {\n      panTo: panTo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      zoom: 15,\n      center: center,\n      options: options,\n      onClick: onMapClick,\n      onLoad: onMapLoad,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, markers.map(marker => /*#__PURE__*/React.createElement(Marker, {\n      key: marker.time.toISOString(),\n      position: {\n        lat: marker.lat,\n        lng: marker.lng\n      },\n      onClick: () => {\n        setSelected(marker);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    })), selected ? /*#__PURE__*/React.createElement(InfoWindow, {\n      position: {\n        lat: selected.lat,\n        lng: selected.lng\n      },\n      onCloseClick: () => {\n        setSelected(null);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, \"Hello\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, \"Clicked \", formatRelative(selected.time, new Date())))) : null), /*#__PURE__*/React.createElement(DisplayPlaces, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nfunction Locate({\n  panTo\n}) {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"locate\",\n    onClick: () => {\n      navigator.geolocation.getCurrentPosition(position => {\n        panTo({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      }, () => null, options);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"compass.svg\",\n    alt: \"compass - locate me\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction Search({\n  panTo\n}) {\n  const {\n    ready,\n    value,\n    suggestions: {\n      status,\n      data\n    },\n    setValue,\n    clearSuggestions\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: {\n        lat: () => center.lat,\n        lng: () => center.lng\n      },\n      radius: 1 * 1000\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Combobox, {\n    onSelect: async address => {\n      setValue(address, false);\n      clearSuggestions();\n\n      try {\n        const results = await getGeocode({\n          address\n        });\n        const {\n          lat,\n          lng\n        } = await getLatLng(results[0]);\n        panTo({\n          lat,\n          lng\n        });\n      } catch (error) {\n        console.log(\"error!\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxInput, {\n    value: value,\n    onChange: e => {\n      setValue(e.target.value);\n    },\n    disable: !ready,\n    placeholder: \"Enter your Point of Interest\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ComboboxPopover, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ComboboxList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, status === \"OK\" && data.map(({\n    id,\n    description\n  }) => /*#__PURE__*/React.createElement(ComboboxOption, {\n    key: id,\n    value: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }))))));\n}","map":{"version":3,"sources":["/home/andrei/Desktop/SoftDevProj/Playground/src/components/map.js"],"names":["React","Component","Map","render","isLoaded","loadError","useLoadScript","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","libraries","markers","setMarkers","useState","selected","setSelected","onMapClick","useCallback","event","current","lat","latLng","lng","time","Date","mapRef","useRef","onMapLoad","map","panTo","setZoom","listItems","places","d","name","mapContainerStyle","center","options","marker","toISOString","formatRelative","Locate","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","Search","ready","value","suggestions","status","data","setValue","clearSuggestions","usePlacesAutocomplete","requestOptions","location","radius","address","results","getGeocode","getLatLng","error","console","log","e","target","id","description"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nexport class Map extends Component {\n  render() {\n    const { isLoaded, loadError } = useLoadScript({\n      googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n      libraries,\n    });\n\n    const [markers, setMarkers] = React.useState([]);\n    const [selected, setSelected] = React.useState(null);\n    const onMapClick = React.useCallback((event) => {\n      setMarkers((current) => [\n        ...current,\n        {\n          lat: event.latLng.lat(),\n          lng: event.latLng.lng(),\n          time: new Date(),\n        },\n      ]);\n    }, []);\n\n    const mapRef = React.useRef();\n    const onMapLoad = React.useCallback((map) => {\n      mapRef.current = map;\n    }, []);\n\n    const panTo = React.useCallback(({ lat, lng }) => {\n      mapRef.current.panTo({ lat, lng });\n      mapRef.current.setZoom(16);\n    }, []);\n    if (loadError) return \"Error loading maps\";\n    if (!isLoaded) return \"Loading Maps\";\n\n    const listItems = places.map((d) => <li key={d.name}>{d.name}</li>);\n    return (\n      <div className=\"centered\">\n        <Search panTo={panTo} />\n        <Locate panTo={panTo} />\n        <GoogleMap\n          mapContainerStyle={mapContainerStyle}\n          zoom={15}\n          center={center}\n          options={options}\n          onClick={onMapClick}\n          onLoad={onMapLoad}\n        >\n          {markers.map((marker) => (\n            <Marker\n              key={marker.time.toISOString()}\n              position={{ lat: marker.lat, lng: marker.lng }}\n              onClick={() => {\n                setSelected(marker);\n              }}\n            />\n          ))}\n\n          {selected ? (\n            <InfoWindow\n              position={{ lat: selected.lat, lng: selected.lng }}\n              onCloseClick={() => {\n                setSelected(null);\n              }}\n            >\n              <div>\n                <h1>Hello</h1>\n                <p>Clicked {formatRelative(selected.time, new Date())}</p>\n              </div>\n            </InfoWindow>\n          ) : null}\n        </GoogleMap>\n        <DisplayPlaces />\n      </div>\n    );\n  }\n}\n\nfunction Locate({ panTo }) {\n  return (\n    <button\n      className=\"locate\"\n      onClick={() => {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            panTo({\n              lat: position.coords.latitude,\n              lng: position.coords.longitude,\n            });\n          },\n          () => null,\n          options\n        );\n      }}\n    >\n      <img src=\"compass.svg\" alt=\"compass - locate me\" />\n    </button>\n  );\n}\n\nfunction Search({ panTo }) {\n  const {\n    ready,\n    value,\n    suggestions: { status, data },\n    setValue,\n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: { lat: () => center.lat, lng: () => center.lng },\n      radius: 1 * 1000,\n    },\n  });\n\n  return (\n    <div className=\"search\">\n      <Combobox\n        onSelect={async (address) => {\n          setValue(address, false);\n          clearSuggestions();\n          try {\n            const results = await getGeocode({ address });\n            const { lat, lng } = await getLatLng(results[0]);\n            panTo({ lat, lng });\n          } catch (error) {\n            console.log(\"error!\");\n          }\n        }}\n      >\n        <ComboboxInput\n          value={value}\n          onChange={(e) => {\n            setValue(e.target.value);\n          }}\n          disable={!ready}\n          placeholder=\"Enter your Point of Interest\"\n        />\n        <ComboboxPopover>\n          <ComboboxList>\n            {status === \"OK\" &&\n              data.map(({ id, description }) => (\n                <ComboboxOption key={id} value={description} />\n              ))}\n          </ComboboxList>\n        </ComboboxPopover>\n      </Combobox>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}