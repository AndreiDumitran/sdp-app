{"ast":null,"code":"let center = {\n  lat: 0,\n  lng: 0\n};\nexport function GetBrowserGeoLocation() {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(position => {\n      center = {\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      };\n    });\n  }\n}\nlet pos;\nlet map;\nlet bounds;\nlet infoWindow;\nlet currentInfoWindow;\nlet service;\nlet infoPane;\n\nfunction initMap() {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(position => {\n      pos = {};\n    });\n  }\n}\n\nconsole.log(pos);\nexport { center };\nGetBrowserGeoLocation();","map":{"version":3,"sources":["/home/andrei/Desktop/SoftDevProj/Playground/src/components/getBrowserLocation.js"],"names":["center","lat","lng","GetBrowserGeoLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","pos","map","bounds","infoWindow","currentInfoWindow","service","infoPane","initMap","console","log"],"mappings":"AAAA,IAAIA,MAAM,GAAG;AACXC,EAAAA,GAAG,EAAE,CADM;AAEXC,EAAAA,GAAG,EAAE;AAFM,CAAb;AAKA,OAAO,SAASC,qBAAT,GAAiC;AACtC,MAAIC,SAAS,CAACC,WAAd,EAA2B;AACzBD,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAc;AACrDP,MAAAA,MAAM,GAAG;AACPC,QAAAA,GAAG,EAAEM,QAAQ,CAACC,MAAT,CAAgBC,QADd;AAEPP,QAAAA,GAAG,EAAEK,QAAQ,CAACC,MAAT,CAAgBE;AAFd,OAAT;AAID,KALD;AAMD;AACF;AACD,IAAIC,GAAJ;AACA,IAAIC,GAAJ;AACA,IAAIC,MAAJ;AACA,IAAIC,UAAJ;AACA,IAAIC,iBAAJ;AACA,IAAIC,OAAJ;AACA,IAAIC,QAAJ;;AAEA,SAASC,OAAT,GAAmB;AACjB,MAAId,SAAS,CAACC,WAAd,EAA2B;AACzBD,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAc;AACrDI,MAAAA,GAAG,GAAG,EAAN;AACD,KAFD;AAGD;AACF;;AAEDQ,OAAO,CAACC,GAAR,CAAYT,GAAZ;AAEA,SAASX,MAAT;AACAG,qBAAqB","sourcesContent":["let center = {\n  lat: 0,\n  lng: 0,\n};\n\nexport function GetBrowserGeoLocation() {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition((position) => {\n      center = {\n        lat: position.coords.latitude,\n        lng: position.coords.longitude,\n      };\n    });\n  }\n}\nlet pos;\nlet map;\nlet bounds;\nlet infoWindow;\nlet currentInfoWindow;\nlet service;\nlet infoPane;\n\nfunction initMap() {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition((position) => {\n      pos = {};\n    });\n  }\n}\n\nconsole.log(pos);\n\nexport { center };\nGetBrowserGeoLocation();\n"]},"metadata":{},"sourceType":"module"}