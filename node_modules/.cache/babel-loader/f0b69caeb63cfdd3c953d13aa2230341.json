{"ast":null,"code":"/** var center = {\n  lat: 0,\n  lng: 0,\n};\n\nexport function GetBrowserGeoLocation() {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(showPosition);\n  }\n}\n\nfunction showPosition(position) {\n  center.lat = position.coords.latitude;\n  center.lng = position.coords.longitude;\n  return this;\n}\n\nexport { center };\nGetBrowserGeoLocation();*/\n\n/** import React from \"react\";\n\nexport function GetBrowserGeoLocation() {\n  const [location, setLocation] = React.useState([]);\n  React.useEffect(() => {\n    if (navigator.geolocation) {\n      //navigator.geolocation.getCurrentPosition(showPosition);\n      setLocation(navigator.geolocation.getCurrentPosition());\n    }\n  }, []);\n  console.log(location);\n  return location;\n}*/","map":{"version":3,"sources":["/home/andrei/Desktop/SoftDevProj/Playground/src/components/getBrowserLocation.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;AAoBA","sourcesContent":["/** var center = {\n  lat: 0,\n  lng: 0,\n};\n\nexport function GetBrowserGeoLocation() {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(showPosition);\n  }\n}\n\nfunction showPosition(position) {\n  center.lat = position.coords.latitude;\n  center.lng = position.coords.longitude;\n  return this;\n}\n\nexport { center };\nGetBrowserGeoLocation();*/\n\n/** import React from \"react\";\n\nexport function GetBrowserGeoLocation() {\n  const [location, setLocation] = React.useState([]);\n  React.useEffect(() => {\n    if (navigator.geolocation) {\n      //navigator.geolocation.getCurrentPosition(showPosition);\n      setLocation(navigator.geolocation.getCurrentPosition());\n    }\n  }, []);\n  console.log(location);\n  return location;\n}*/\n"]},"metadata":{},"sourceType":"module"}