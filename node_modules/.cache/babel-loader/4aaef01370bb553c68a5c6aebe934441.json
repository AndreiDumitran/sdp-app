{"ast":null,"code":"var _jsxFileName = \"/home/andrei/Desktop/SoftDevProj/Playground/src/components/displayPlaces.js\";\nimport React, { Component } from \"react\";\nimport { center, GetBrowserGeoLocation } from \"./getBrowserLocation\";\nimport { Card, Accordion } from \"react-bootstrap\";\nconst placeType = [\"point_of_interest\"];\nGetBrowserGeoLocation();\nconsole.log(center);\nexport let radius = 200;\nconst url = \"https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=\" + center.lat + \",\" + -1.507328 + \"&radius=\" + radius + \"&type=\" + placeType + \"&key=\" + process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\nconsole.log(url);\nlet places = [];\nfetch(url).then(res => {\n  return res.json();\n}).then(res => {\n  for (let googlePlace of res.results) {\n    var place = {};\n    var myLat = googlePlace.geometry.location.lat;\n    var myLong = googlePlace.geometry.location.lng;\n    var coordinate = {\n      latitude: myLat,\n      longitude: myLong\n    };\n    place[\"placeTypes\"] = googlePlace.types;\n    place[\"coordinate\"] = coordinate;\n    place[\"placeId\"] = googlePlace.place_id;\n    place[\"placeName\"] = googlePlace.name;\n    place[\"formattedAddress\"] = googlePlace.rating;\n    places.push(place);\n  }\n\n  console.log(places);\n}).catch(error => {\n  console.log(error);\n});\nexport class DisplayPlacesList extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Accordion, {\n      defaultActiveKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, places.map(nearbyPlaces => /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n      as: Card.Header,\n      eventKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, nearbyPlaces.placeName), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n      eventKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, nearbyPlaces.formattedAddress))))));\n  }\n\n}","map":{"version":3,"sources":["/home/andrei/Desktop/SoftDevProj/Playground/src/components/displayPlaces.js"],"names":["React","Component","center","GetBrowserGeoLocation","Card","Accordion","placeType","console","log","radius","url","lat","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","places","fetch","then","res","json","googlePlace","results","place","myLat","geometry","location","myLong","lng","coordinate","latitude","longitude","types","place_id","name","rating","push","catch","error","DisplayPlacesList","render","map","nearbyPlaces","Header","placeName","formattedAddress"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,qBAAjB,QAA8C,sBAA9C;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,iBAAhC;AAEA,MAAMC,SAAS,GAAG,CAAC,mBAAD,CAAlB;AAEAH,qBAAqB;AACrBI,OAAO,CAACC,GAAR,CAAYN,MAAZ;AAEA,OAAO,IAAIO,MAAM,GAAG,GAAb;AAEP,MAAMC,GAAG,GACP,2EACAR,MAAM,CAACS,GADP,GAEA,GAFA,GAGA,CAAC,QAHD,GAIA,UAJA,GAKAF,MALA,GAMA,QANA,GAOAH,SAPA,GAQA,OARA,GASAM,OAAO,CAACC,GAAR,CAAYC,6BAVd;AAWAP,OAAO,CAACC,GAAR,CAAYE,GAAZ;AAEA,IAAIK,MAAM,GAAG,EAAb;AACAC,KAAK,CAACN,GAAD,CAAL,CACGO,IADH,CACSC,GAAD,IAAS;AACb,SAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,CAHH,EAIGF,IAJH,CAISC,GAAD,IAAS;AACb,OAAK,IAAIE,WAAT,IAAwBF,GAAG,CAACG,OAA5B,EAAqC;AACnC,QAAIC,KAAK,GAAG,EAAZ;AACA,QAAIC,KAAK,GAAGH,WAAW,CAACI,QAAZ,CAAqBC,QAArB,CAA8Bd,GAA1C;AACA,QAAIe,MAAM,GAAGN,WAAW,CAACI,QAAZ,CAAqBC,QAArB,CAA8BE,GAA3C;AACA,QAAIC,UAAU,GAAG;AACfC,MAAAA,QAAQ,EAAEN,KADK;AAEfO,MAAAA,SAAS,EAAEJ;AAFI,KAAjB;AAIAJ,IAAAA,KAAK,CAAC,YAAD,CAAL,GAAsBF,WAAW,CAACW,KAAlC;AACAT,IAAAA,KAAK,CAAC,YAAD,CAAL,GAAsBM,UAAtB;AACAN,IAAAA,KAAK,CAAC,SAAD,CAAL,GAAmBF,WAAW,CAACY,QAA/B;AACAV,IAAAA,KAAK,CAAC,WAAD,CAAL,GAAqBF,WAAW,CAACa,IAAjC;AACAX,IAAAA,KAAK,CAAC,kBAAD,CAAL,GAA4BF,WAAW,CAACc,MAAxC;AACAnB,IAAAA,MAAM,CAACoB,IAAP,CAAYb,KAAZ;AACD;;AACDf,EAAAA,OAAO,CAACC,GAAR,CAAYO,MAAZ;AACD,CArBH,EAsBGqB,KAtBH,CAsBUC,KAAD,IAAW;AAChB9B,EAAAA,OAAO,CAACC,GAAR,CAAY6B,KAAZ;AACD,CAxBH;AA0BA,OAAO,MAAMC,iBAAN,SAAgCrC,SAAhC,CAA0C;AAC/CsC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,gBAAgB,EAAC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGxB,MAAM,CAACyB,GAAP,CAAYC,YAAD,iBACV,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD,CAAW,MAAX;AAAkB,MAAA,EAAE,EAAErC,IAAI,CAACsC,MAA3B;AAAmC,MAAA,QAAQ,EAAC,GAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,YAAY,CAACE,SADhB,CADF,eAIE,oBAAC,SAAD,CAAW,QAAX;AAAoB,MAAA,QAAQ,EAAC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYF,YAAY,CAACG,gBAAzB,CADF,CAJF,CADD,CADH,CADF,CADF;AAgBD;;AAlB8C","sourcesContent":["import React, { Component } from \"react\";\nimport { center, GetBrowserGeoLocation } from \"./getBrowserLocation\";\nimport { Card, Accordion } from \"react-bootstrap\";\n\nconst placeType = [\"point_of_interest\"];\n\nGetBrowserGeoLocation();\nconsole.log(center);\n\nexport let radius = 200;\n\nconst url =\n  \"https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=\" +\n  center.lat +\n  \",\" +\n  -1.507328 +\n  \"&radius=\" +\n  radius +\n  \"&type=\" +\n  placeType +\n  \"&key=\" +\n  process.env.REACT_APP_GOOGLE_MAPS_API_KEY;\nconsole.log(url);\n\nlet places = [];\nfetch(url)\n  .then((res) => {\n    return res.json();\n  })\n  .then((res) => {\n    for (let googlePlace of res.results) {\n      var place = {};\n      var myLat = googlePlace.geometry.location.lat;\n      var myLong = googlePlace.geometry.location.lng;\n      var coordinate = {\n        latitude: myLat,\n        longitude: myLong,\n      };\n      place[\"placeTypes\"] = googlePlace.types;\n      place[\"coordinate\"] = coordinate;\n      place[\"placeId\"] = googlePlace.place_id;\n      place[\"placeName\"] = googlePlace.name;\n      place[\"formattedAddress\"] = googlePlace.rating;\n      places.push(place);\n    }\n    console.log(places);\n  })\n  .catch((error) => {\n    console.log(error);\n  });\n\nexport class DisplayPlacesList extends Component {\n  render() {\n    return (\n      <div>\n        <Accordion defaultActiveKey=\"0\">\n          {places.map((nearbyPlaces) => (\n            <Card>\n              <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                {nearbyPlaces.placeName}\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"0\">\n                <Card.Body>{nearbyPlaces.formattedAddress}</Card.Body>\n              </Accordion.Collapse>\n            </Card>\n          ))}\n        </Accordion>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}