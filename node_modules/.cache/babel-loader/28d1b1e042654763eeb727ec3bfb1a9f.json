{"ast":null,"code":"const center = {\n  lat: 0,\n  lng: 0\n};\nexport function GetBrowserGeoLocation() {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(showPosition);\n  }\n}\n\nfunction showPosition(position) {\n  center.lat = position.coords.latitude;\n  center.lng = position.coords.longitude;\n}\n\nexport { center };\nGetBrowserGeoLocation();\n/* */\n\nimport { useState, useEffect } from 'react';\nexport const usePosition = () => {\n  const [position, setPosition] = useState({});\n  const [error, setError] = useState(null);\n\n  const onChange = ({\n    coords\n  }) => {\n    setPosition({\n      latitude: coords.latitude,\n      longitude: coords.longitude\n    });\n  };\n\n  const onError = error => {\n    setError(error.message);\n  };\n\n  useEffect(() => {\n    const geo = navigator.geolocation;\n\n    if (!geo) {\n      setError('Geolocation is not supported');\n      return;\n    }\n\n    watcher = geo.watchPosition(onChange, onError);\n    return () => geo.clearWatch(watcher);\n  }, []);\n  return { ...position,\n    error\n  };\n};","map":{"version":3,"sources":["/home/andrei/Desktop/SoftDevProj/Playground/src/components/getBrowserLocation.js"],"names":["center","lat","lng","GetBrowserGeoLocation","navigator","geolocation","getCurrentPosition","showPosition","position","coords","latitude","longitude","useState","useEffect","usePosition","setPosition","error","setError","onChange","onError","message","geo","watcher","watchPosition","clearWatch"],"mappings":"AAAA,MAAMA,MAAM,GAAG;AACbC,EAAAA,GAAG,EAAE,CADQ;AAEbC,EAAAA,GAAG,EAAE;AAFQ,CAAf;AAKA,OAAO,SAASC,qBAAT,GAAiC;AACtC,MAAIC,SAAS,CAACC,WAAd,EAA2B;AACzBD,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,YAAzC;AACD;AACF;;AACD,SAASA,YAAT,CAAsBC,QAAtB,EAAgC;AAC9BR,EAAAA,MAAM,CAACC,GAAP,GAAaO,QAAQ,CAACC,MAAT,CAAgBC,QAA7B;AACAV,EAAAA,MAAM,CAACE,GAAP,GAAaM,QAAQ,CAACC,MAAT,CAAgBE,SAA7B;AACD;;AAED,SAASX,MAAT;AACAG,qBAAqB;AACrB;;AACA,SAAQS,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC/B,QAAM,CAACN,QAAD,EAAWO,WAAX,IAA0BH,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMM,QAAQ,GAAG,CAAC;AAACT,IAAAA;AAAD,GAAD,KAAc;AAC7BM,IAAAA,WAAW,CAAC;AACVL,MAAAA,QAAQ,EAAED,MAAM,CAACC,QADP;AAEVC,MAAAA,SAAS,EAAEF,MAAM,CAACE;AAFR,KAAD,CAAX;AAID,GALD;;AAMA,QAAMQ,OAAO,GAAIH,KAAD,IAAW;AACzBC,IAAAA,QAAQ,CAACD,KAAK,CAACI,OAAP,CAAR;AACD,GAFD;;AAGAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,GAAG,GAAGjB,SAAS,CAACC,WAAtB;;AACA,QAAI,CAACgB,GAAL,EAAU;AACRJ,MAAAA,QAAQ,CAAC,8BAAD,CAAR;AACA;AACD;;AACDK,IAAAA,OAAO,GAAGD,GAAG,CAACE,aAAJ,CAAkBL,QAAlB,EAA4BC,OAA5B,CAAV;AACA,WAAO,MAAME,GAAG,CAACG,UAAJ,CAAeF,OAAf,CAAb;AACD,GARQ,EAQN,EARM,CAAT;AASA,SAAO,EAAC,GAAGd,QAAJ;AAAcQ,IAAAA;AAAd,GAAP;AACD,CAvBM","sourcesContent":["const center = {\n  lat: 0,\n  lng: 0,\n};\n\nexport function GetBrowserGeoLocation() {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(showPosition);\n  }\n}\nfunction showPosition(position) {\n  center.lat = position.coords.latitude;\n  center.lng = position.coords.longitude;\n}\n\nexport { center };\nGetBrowserGeoLocation();\n/* */\nimport {useState, useEffect} from 'react';\nexport const usePosition = () => {\n  const [position, setPosition] = useState({});\n  const [error, setError] = useState(null);\n  \n  const onChange = ({coords}) => {\n    setPosition({\n      latitude: coords.latitude,\n      longitude: coords.longitude,\n    });\n  };\n  const onError = (error) => {\n    setError(error.message);\n  };\n  useEffect(() => {\n    const geo = navigator.geolocation;\n    if (!geo) {\n      setError('Geolocation is not supported');\n      return;\n    }\n    watcher = geo.watchPosition(onChange, onError);\n    return () => geo.clearWatch(watcher);\n  }, []);\n  return {...position, error};\n}"]},"metadata":{},"sourceType":"module"}